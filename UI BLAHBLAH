------// LPH >--------------------------------

function LPH_JIT_ULTRA(f)
	return f
	end
	function LPH_JIT_MAX(f)
	return f
	end  


--------// LPH >--------------------------------

	if not LPH_OBFUSCATED then
		LPH_JIT = function(...) return ... end
		LPH_JIT_MAX = function(...) return ... end
		LPH_JIT_ULTRA = function(...) return ... end
		LPH_NO_VIRTUALIZE = function(...) return ... end
		LPH_NO_UPVALUES = function(f) return(function(...) return f(...) end) end
		LPH_ENCSTR = function(...) return ... end
		LPH_STRENC = function(...) return ... end
		LPH_HOOK_FIX = function(...) return ... end
		LPH_CRASH = function() return print(debug.traceback()) end
	end

------// LPH >--------------------------------


    
--< Bypasses >--------------------------------
	
local antihitbox
antihitbox = hookmetamethod(game, "__index", LPH_NO_VIRTUALIZE(function(...)
local self, k = ...
if not checkcaller() and k == "Size" and self.Name == "Head" then
    return 1.672248125076294, 0.835624098777771, 0.835624098777771
end
return antihitbox(...)
end))

	local antixray
	antixray = hookmetamethod(game, "__index", LPH_NO_VIRTUALIZE(function(...)
	local self, k = ...
	if not checkcaller() and k == "Hitbox" and self.Name == "Transparency" then
		return 1
	end
	return antixray(...)
	end))

local mt = getrawmetatable(game)
make_writeable(mt)
local old_index = mt.__index
mt.__index = function(a,b)
    if tostring(a) == "Workspace" then
		if tostring(b) == "Gravity" then
			return 75;
		end
	end
	return old_index(a, b)
end    

local antilongneck
antilongneck = hookmetamethod(game, "__index", LPH_NO_VIRTUALIZE(function(...)
local self, k = ...
if not checkcaller() and k == "PrismaticConstraint" and self.Name == "LowerLimit" then
    return 1.75
end
return antilongneck(...)
end))

local antilongneck2
antilongneck2 = hookmetamethod(game, "__index", LPH_NO_VIRTUALIZE(function(...)
local self, k = ...
if not checkcaller() and k == "PrismaticConstraint" and self.Name == "UpperLimit" then
    return 3
end
return antilongneck2(...)
end))

local antigravitytest
antigravitytest = hookmetamethod(game, "__index", LPH_NO_VIRTUALIZE(function(...)
local self, k = ...
if not checkcaller() and k == "Gravity" and self.Name == "Workspace" then
    return 75
end
return antigravitytest(...)
end))

--< Bypasses >--------------------------------



local userInputService = game:GetService("UserInputService")
local ZKeyCode = Enum.KeyCode.H

local function executeCode()
local HedsOn = Instance.new("Part")
HedsOn.Name = "Cheese"
HedsOn.Anchored = false
HedsOn.CanCollide = false
HedsOn.Transparency = 1
HedsOn.Size = Vector3.new(1, 1, 1)
HedsOn.Parent = game.ReplicatedStorage

for v, i in pairs(game:GetService("Workspace"):GetChildren()) do
    if i:FindFirstChild("HumanoidRootPart") then
        if not i:FindFirstChild("Cheese") then
            if i ~= game.Players.LocalPlayer.Character then
                local BigHeadsPart = Instance.new("Part")
                BigHeadsPart.Name = "Head"
                BigHeadsPart.Anchored = false
                BigHeadsPart.CanCollide = false
                BigHeadsPart.Size = Vector3.new(10, 10, 10)
                BigHeadsPart.Transparency = 0.5

                -- Clone and parent the BigHeadsPart to the specified parts
                local partsToAttachTo = {
                    i.LeftFoot,
                    i.Torso,
                    i.LeftHand,
                    i.RightHand
                }

                for _, partToAttachTo in pairs(partsToAttachTo) do
                    local HeadsParts = BigHeadsPart:Clone()
                    HeadsParts.Parent = i
                    HeadsParts.Orientation = partToAttachTo.Orientation

                    local HedsOn = HedsOn:Clone()
                    HedsOn.Parent = i

                    local Headswelding = Instance.new("Weld")
                    Headswelding.Parent = HeadsParts
                    Headswelding.Part0 = partToAttachTo
                    Headswelding.Part1 = HeadsParts

                    HeadsParts.Position = Vector3.new(partToAttachTo.Position.X, partToAttachTo.Position.Y, partToAttachTo.Position.Z)
                end
            end
        end
    end
end
end

userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent and input.KeyCode == ZKeyCode then
        executeCode()
    end
end)
